.TH "F_LogUtil" 3 "31 May 2012" "Version 2.3.0-0" "Midas" \" -*- nroff -*-
.ad l
.nh
.SH NAME
F_LogUtil \- Logging Utilities 

.br
 
.PP

.br
   
.SH "lazylogger  - logger to copy/move stored files"
.PP
lazylogger is an application which decouples the data acquisition from the data logging mechanism. The need for such application has been dictated by the slow response time of some of the media logging devices (i.e. tape devices). Delay due to tape mounting, retensioning and repositioning implies that the data acquisition has to be held until operation completion. By using \fBmlogger\fP to log data to disk in a first stage and then using lazylogger to copy or move the stored files to the 'slow device', we can keep the acquisition running without interruption.
.IP "\(bu" 2
Multiple lazyloggers can be running simultaneously on the same computer, each one taking care of a particular channel.
.IP "\(bu" 2
Each lazylogger channel will have a dedicated ODB tree (see \fBODB /Lazy Tree\fP ) containing its own information.
.IP "\(bu" 2
All the lazylogger channels will be in the ODB under /Lazy/<channel-name>/...
.IP "\(bu" 2
Each channel tree is composed of three sub-trees Settings, Statistics, List.
.PP
.PP
The Settings and Statistics trees are self-explanatory, and contain the operational \fBparameters\fP of the channel(s). The List key will have a dynamic list of run numbers which have been successfully dealt with by the lazylogger channel. This list won't exist until the first successful operation of the channel is completed.  While the lazylogger was developed specifically for tape device, it also supports data file transfer to FTP repository system. Improvement towards a more generic support has been done which includes:
.IP "\(bu" 2
dynamic directory destination based on run number or date.
.IP "\(bu" 2
compression copy.
.IP "\(bu" 2
'stay behind=0' support.
.IP "\(bu" 2
Script copy support.
.PP
.PP
.IP "\(bu" 2
\fB Arguments \fP
.IP "  \(bu" 4
[-h ] : help.
.IP "  \(bu" 4
[-h hostname ] : host name.
.IP "  \(bu" 4
[-e exptname ] : experiment name.
.IP "  \(bu" 4
[-D ] : start program as a daemon.
.IP "  \(bu" 4
[-c channel ] : logging channel. Specify the lazylogger to activate.
.IP "  \(bu" 4
[-z ] : zap statistics. Clear the statistics tree of all the defined lazylogger channels.
.PP

.PP
.PP

.br
.PP

.br
.PP
 
.SH "ODB /Lazy Tree"
.PP
This tree is used by the lazylogger (if running). It is created with default \fBparameters\fP on the first activation of the \fBlazylogger utility\fP . This task connects to a defined channel (e.g. Tape, Disk) when started. Multiple instances of the program can run concurrently, connecting to a different channel (see \fBlazylogger\fP above).
.PP
The following example shows a /lazy tree with a \fI <channel-name> \fP of \fB'Disk'\fP. A sub-tree /lazy/disk has been created, containing sub-trees 'Settings' and 'Statistics' . A third sub-tree 'List' will be created after the first successful operation of the channel. The contents of these sub-trees is discussed below (see \fBSettings\fP, \fBStatistics\fP and \fBList\fP subtrees.) 
.PP
.nf
[local:pol:S]/>ls /lazy/disk
Settings
Statistics
List

.fi
.PP
.PP

.br
.PP

.br
 
.SS "Example of the  ODB /Lazy/<channel_name>/Settings subtree"
An example of the Settings subtree for a lazylogger channel is shown below:
.PP
.PP
.nf
    Settings                      DIR
        Maintain free space(%)    INT     1     4     3m   0   RWD  0
        Stay behind               INT     1     4     3m   0   RWD  -3
        Alarm Class               STRING  1     32    3m   0   RWD  
        Running condition         STRING  1     128   3m   0   RWD  ALWAYS
        Data dir                  STRING  1     256   3m   0   RWD  /home/midas/online
        Data format               STRING  1     8     3m   0   RWD  MIDAS
        Filename format           STRING  1     128   3m   0   RWD  run%05d.mid
        Backup type               STRING  1     8     3m   0   RWD  Tape
        Execute after rewind      STRING  1     64    3m   0   RWD  
        Path                      STRING  1     128   3m   0   RWD  
        Capacity (Bytes)          FLOAT   1     4     3m   0   RWD  5e+09
        List label                STRING  1     128   3m   0   RWD  
  Execute before writing file     STRING  1     64    11h  0   RWD  lazy_prewrite.csh
  Execute after writing file      STRING  1     64    11h  0   RWD  rundb_addrun.pl
  Modulo.Position                 STRING  1     8     11h  0   RWD  2.1
  Tape Data Append                BOOL    1     4     11h  0   RWD  y
.fi
.PP
.PP

.br
.PP

.br
 
.SS "Explanation of the Keys in the  ODB /Lazy/<channel_name>/Settings  subtree"
The following table explains the meaning of the keys in the Settings subtree. An example of the subtree is shown \fBabove\fP.
.PP
Keys in the ODB tree /Lazy/<channel_name>/Settings   ODB Key  Type Explanation 
.PP
Settings  
.br
 DIR ODB Settings subtree for a Lazylogger channel.  
.PP

.br
   Maintain free space(%) INT As the data Logger (mlogger) runs independently from the \fBLazylogger\fP, the data logging device (e.g. disk) contains all the recorded data files. Under this condition, Lazylogger can be instructed to 'purge' the disk after successful backup of the data onto a 'slow device' (e.g. tape). The 'Maintain free space(\\%)' parameter controls the percentage of disk space required to be maintained as free (for 'none' set to 0). 
.PD 0

.IP "\(bu" 2
The conditions that must \fBALL\fP be satisfied before \fBremoving\fP a data file are defined as: 
.PD 0

.IP "  1." 6
The data file corresponding to the given run number following the format declared under \fBSettings/Filename format\fP IS PRESENT on the \fBSettings/Data Dir\fP path. 
.IP "  2." 6
The given run number MUST appear anywhere under the \fBSettings/List/\fP directory of ALL the Lazy channels having the same \fBSettings/Filename format\fP as this channel. 
.IP "  3." 6
The given run number MUST appear anywhere under the \fBSettings/List/\fP directory of that channel 
.PP

.PP
.PP

.br
   Stay behind  INT This parameter defines how many consecutive data files should be kept between the current run and the last lazylogger run.
.IP "\(bu" 2
\fB Example with 'Stay behind = -3' \fP:
.PP
.IP "1." 4
Current acquisition run number 253 -> run00253.mid is being logged by mlogger.
.IP "2." 4
Files available on the disk corresponding to runs #248, #249, #250, #251, #252.
.IP "3." 4
Lazylogger will start backing up run #250 as soon as the new run 254 starts.
.IP "4." 4
'Stay behind = -3' corresponds to 3 files untouched on the disk (#251, #252, #253).
.PP
.PP
If the sign (+/-) of the \fB'Stay behind'\fP parameter is
.IP "\(bu" 2
\fBnegative:\fP the lazylogger will \fBalways\fP scan the entire disk at the 'Data Dir' path, from the oldest to the most recent file present for backup.
.IP "\(bu" 2
\fBpositive:\fP lazylogger will \fBbackup\fP starting from -x behind the current acquisition run number. Run order will be ignored.  
.PP
.PP

.br
   Alarm Class  STRING Specify the \fBAlarm class\fP to be used in case of an alarm being triggered.  
.PP

.br
   Running Condition  STRING Specify the type of condition for which the lazylogger should be actived. By default lazylogger is \fBALWAYS\fP running. The choices are
.IP "\(bu" 2
ALWAYS, NEVER, WHILE_NO_ACQ_RUNNING,
.IP "\(bu" 2
or a condition based on a single field of the ODB key<=>value
.PP
.PP
\fB Example \fP: In the case of high data rate acquisition it could be necessary to activate the lazylogger only
.IP "\(bu" 2
when the run is either paused or stopped (i.e. WHILE_NO_ACQ_RUNNING) 
.PP
.nf
      odbedit> set 'Running condition' WHILE_ACQ_NOT_RUNNING

.fi
.PP

.IP "\(bu" 2
or when some external condition is satisfied such as 'low beam intensity'. 
.PP
.nf
      odbedit> set 'Running condition' '/alias/max_rate \< 200'

.fi
.PP
  
.PP
.PP

.br
   Data dir  STRING Specifies the data directory path of the data logging device (e.g. disk). If the Key 'Data Dir' is present, the contents is taken as the path, otherwise the current directory is used (i.e. the path where the lazylogger client was started).  
.PP

.br
   Data format  STRING Specifies the Data Format of the data files. Currently supported formats are \fBMIDAS\fP (Note that YBOS is no longer supported - see \fBSep 2010\fP).  
.PP

.br
   Filename format  STRING Specifies the file format of the data files on the data logging device (i.e. disk). This should be the same \fBfilename format\fP as used by the data logger to save the files.  
.PP

.br
   Backup type  STRING Specifies the 'slow device' backup type. Default \fBTape\fP. =======
.IP "\(bu" 2
\fB[Data dir]\fP Specify the Data directory path of the data files. By default if the '/Logger/Data Dir' is present, the pointed value is taken otherwise the current directory where lazylogger has been started is used. 
.br

.br

.IP "\(bu" 2
\fB[Data format]\fP Specify the Data format of the data files. Currently supported formats are: \fBMIDAS\fP (Note that \fBYBOS\fP format is no longer supported - see \fBSep 2010\fP ). 
.br

.br

.IP "\(bu" 2
\fB[Filename format]\fP Specify the file format of the data files. Same format as given for the data logger. 
.br

.br

.IP "\(bu" 2
\fB[Backup type]\fP Specify the 'slow device' backup type. Default \fBTape\fP. >>>>>>> .r4846 Can be \fBDisk\fP or \fBFtp\fP.  
.PP
.PP

.br
   Execute after rewind  STRING Specifies an optional script to run after completion of a lazylogger backup set (see below 'Capacity (Bytes)').  
.PP

.br
   Path  STRING Specifies the 'slow device' path. Three possible types of Path:
.IP "\(bu" 2
For Tape : \fB/dev/nst0-\fP (UNIX like).
.IP "\(bu" 2
For Disk : \fB/data1/myexpt\fP 
.IP "\(bu" 2
For Ftp : \fB host,port,user,password,directory\fP  
.PP
.PP

.br
   Capacity (Bytes)  STRING Specifies the maximum 'slow device' capacity in bytes. When this capacity is reached,the lazylogger will close the backup device and clear the \fBList Label\fP field to prevent further backup. It will also rewind the stream device if possible.  
.PP

.br
   List label  STRING Specify a label for a set of backed up files to the 'slow device'. This label is used only internaly by the lazylogger for creating a new array composed of the backed up runs under the \fB/Settings/List\fP subdirectory, until the \fBCapacity\fP value has been reached. Once the backup set is complete, lazylogger will clear the 'List label' field and therefore prevent any further backup until a non-empty 'List label' is entered again. On the other hand the list label will remain under the /List key to display all run being backed up until the corresponding files have been removed from the disk.  
.PP

.br
   Exec preW file  STRING Permits a script to be run before the begining of the lazy job. The \fBarguments\fP passed to the scripts are: \fBinput file name , output file name, current block number\fP.  
.PP

.br
   Exec postW file  STRING Permits a script to be run after the completion of the lazy job. The \fB arguments \fP passed to the scripts are: \fBlist label, current job number, source path, file name, file size in MB, current block number\fP.  
.PP

.br
   Modulo.Position  STRING This field is for multiple instances of the lazylogger where each instance works on a sub-set of run number. By specifying the Modulo.Position you're telling the current lazy instance how many instances are simultaneously running (3.) and the position of which this instance is assigned to (.1) As an example for 3 lazyloggers running simultaneously the field assignment should be : 
.PP
.nf
  Channel    Field    Run#
  Lazy_1     3.0      21, 24, 27, ...
  Lazy_2     3.1      22, 25, 28, ...
  Lazy_3     3.2      23, 26, 29, ...

.fi
.PP
.PP
In the example of the /Settings tree \fBabove\fP, the Modulo.Position is set to 2.1 , indicating this is instance 1, and two lazyloggers are running.  
.PP

.br
   Tape Data Append  BOOL If this key is set to 'y', the spooling of the Tape device to the End_of_Device (EOD) before starting the lazy job is \fBenabled\fP. This command is valid only for 'Backup Type' Tape. If this flag is not enabled the lazy job starts at the current tape position.   Above: meaning of keys in the /Lazy/<channel_name>/Settings ODB tree 
.PP

.br
.PP

.br
 
.SS "The  ODB /Lazy/<channel_name>/Statistics subtree"
The Statistics ODB subtree contains general information about the status of the current lazylogger channel.
.PP
An example of the Statistics subtree for a lazylogger channel is shown below:
.PP
.PP
.nf
[local:pol:S]/>ls /lazy/disk/Statistics/
Backup file                     000321.mid
File size (Bytes)               0
KBytes copied                   0
Total Bytes copied              0
Copy progress (%)               0
Copy Rate (Bytes per s)         0
Backup status (%)               0
Number of Files                 173
Current Lazy run                321
.fi
.PP
.PP

.br
.PP

.br
.SS "The  ODB /Lazy/<channel_name>/List subtree"
The List ODB subtree will contain arrays of run number associated with the array name backup-set label (see \fBlist label\fP) . Any run number appearing in any of the arrays is considered to have been backed up.
.PP
An example of the List subtree for a lazylogger channel is shown below. In this case, the \fBlist label\fP was set to 'archive'.
.PP
.PP
.nf
[local:pol:S]/>ls /lazy/disk/List
archive
                                230
                                231
                                232
                                233
                                234
                                235
                                236
                                237
.fi
.PP
.PP

.br
.PP

.br
.SH "Setting up the Lazylogger"
.PP
The Lazylogger requires to be \fBsetup\fP before data file can be moved. This setup consists of 4 steps:
.PP
.PD 0
.IP "1." 4
Invoke the lazylogger once for setting up the appropriate ODB tree and exit. In this example, the channel is 'Tape'. 
.PP
.nf
  >lazylogger -c Tape

.fi
.PP
 
.IP "2." 4
Edit the newly created ODB tree. Set the Settings field(s) to match your requirements. 
.PP
.nf
> odbedit -e midas
[local:midas:Stopped]/>cd /Lazy/tape/
[local:midas:Stopped]tape>ls
[local:midas:Stopped]tape>ls -lr
Key name                        Type    #Val  Size  Last Opn Mode Value
---------------------------------------------------------------------------
tape                            DIR
    Settings                    DIR
        Maintain free space(%)  INT     1     4     3m   0   RWD  0
        Stay behind             INT     1     4     3m   0   RWD  -3
        Alarm Class             STRING  1     32    3m   0   RWD  
        Running condition       STRING  1     128   3m   0   RWD  ALWAYS
        Data dir                STRING  1     256   3m   0   RWD  /home/midas/online
        Data format             STRING  1     8     3m   0   RWD  MIDAS
        Filename format         STRING  1     128   3m   0   RWD  run%05d.mid
        Backup type             STRING  1     8     3m   0   RWD  Tape
        Execute after rewind    STRING  1     64    3m   0   RWD  
        Path                    STRING  1     128   3m   0   RWD  
        Capacity (Bytes)        FLOAT   1     4     3m   0   RWD  5e+09
        List label              STRING  1     128   3m   0   RWD  
    Statistics                  DIR
        Backup file             STRING  1     128   3m   0   RWD  none 
        File size [Bytes]       DOUBLE  1     4     3m   0   RWD  0
        KBytes copied           DOUBLE  1     4     3m   0   RWD  0
        Total Bytes copied      DOUBLE  1     4     3m   0   RWD  0
        Copy progress [%]       DOUBLE  1     4     3m   0   RWD  0
        Copy Rate [bytes per s] DOUBLE  1     4     3m   0   RWD  0
        Backup status [%]       DOUBLE  1     4     3m   0   RWD  0
        Number of Files         INT     1     4     3m   0   RWD  0
        Current Lazy run        INT     1     4     3m   0   RWD  0
[local:midas:Stopped]tape>cd Settings/
[local:midas:Stopped]Settings>set 'Data dir' /data
[local:midas:Stopped]Settings>set 'Capacity (Bytes)' 15e9

.fi
.PP
 
.IP "3." 4
Start lazylogger in the background 
.PP
.nf
>lazylogger -c Tape -D

.fi
.PP
 
.IP "4." 4
At this point, the lazylogger is running and waiting for the \fBlist label\fP key to be defined before starting the copy procedure. The \fBmstat\fP utility will display information regarding the status of the lazylogger. 
.PP
.nf
> odbedit -e midas
[local:midas:Stopped]/>cd /Lazy/tape/Settings
[local:midas:Stopped]Settings>set 'List label' cni-043

.fi
.PP
.PP

.br
.PP

.br
.PP

.PP
.SS "Operation of the Lazylogger"
For every major operation of the lazylogger a message is sent to the Message buffer and will be appended to the default MIDAS log file (\fBmidas.log\fP). These messages are the only mean of finding out What/When/Where/How the lazylogger has operated on a data file. A fragment of the \fBmidas.log\fP for the chaos experiment is shown below. In this case, the \fBMaintain free space(%)\fP field was enabled which produces the cleanup of the data files and the entry in the \fBList\fP tree after copy. 
.PP
.nf
Fri Mar 24 14:40:08 2000 [Lazy_Tape] 8351 (rm:16050ms) /scr0/spring2000/run08351.ybs file REMOVED
Fri Mar 24 14:40:08 2000 [Lazy_Tape] Tape run#8351 entry REMOVED
Fri Mar 24 14:59:55 2000 [Logger] stopping run after having received 1200000 events
Fri Mar 24 14:59:56 2000 [CHAOS] Run 8366 stopped
Fri Mar 24 14:59:56 2000 [Logger] Run #8366 stopped
Fri Mar 24 14:59:57 2000 [SUSI] saving info in run log
Fri Mar 24 15:00:07 2000 [Logger] starting new run

Fri Mar 24 15:00:07 2000 [CHAOS] Run 8367 started
Fri Mar 24 15:00:07 2000 [Logger] Run #8367 started
Fri Mar 24 15:06:59 2000 [Lazy_Tape] cni-043[15] (cp:410.6s) /dev/nst0/run08365.ybs 864.020MB file NEW
Fri Mar 24 15:07:35 2000 [Lazy_Tape] 8352 (rm:25854ms) /scr0/spring2000/run08352.ybs file REMOVED
Fri Mar 24 15:07:35 2000 [Lazy_Tape] Tape run#8352 entry REMOVED
Fri Mar 24 15:27:09 2000 [Lazy_Tape] 8353 (rm:23693ms) /scr0/spring2000/run08353.ybs file REMOVED
Fri Mar 24 15:27:09 2000 [Lazy_Tape] Tape run#8353 entry REMOVED
Fri Mar 24 15:33:22 2000 [Logger] stopping run after having received 1200000 events
Fri Mar 24 15:33:22 2000 [CHAOS] Run 8367 stopped
Fri Mar 24 15:33:23 2000 [Logger] Run #8367 stopped
Fri Mar 24 15:33:24 2000 [SUSI] saving info in run log
Fri Mar 24 15:33:33 2000 [Logger] starting new run
Fri Mar 24 15:33:34 2000 [CHAOS] Run 8368 started
Fri Mar 24 15:33:34 2000 [Logger] Run #8368 started
Fri Mar 24 15:40:18 2000 [Lazy_Tape] cni-043[16] (cp:395.4s) /dev/nst0/run08366.ybs 857.677MB file NEW
Fri Mar 24 15:50:15 2000 [Lazy_Tape] 8354 (rm:28867ms) /scr0/spring2000/run08354.ybs file REMOVED
Fri Mar 24 15:50:15 2000 [Lazy_Tape] Tape run#8354 entry REMOVED
...

.fi
.PP
.IP "\(bu" 2
Once the lazylogger has started a job on a data file, trying to terminate the application will result in producing a log message informing the user of the actual percentage of the backup completed so far. This message will repeat itself until completion of the backup, and only then the lazylogger application will terminate.
.IP "\(bu" 2
If an interruption of the lazylogger is forced (kill...), the state of the backup device is undetermined. Recovery is not possible, and the full backup set has to be redone. In order to do this, you need:
.IP "\(bu" 2
To rewind the backup device.
.IP "\(bu" 2
Delete the /Lazy/<channel_name>/List/<list label> array.
.IP "\(bu" 2
Restart the lazylogger with the -z switch which will 'zap' the statistics entries.
.IP "\(bu" 2
In order to facilitate the recovery procedure, lazylogger produces an ODB ASCII file of the lazy channel tree after completion of successful operation. This file (\fBTape_recover.odb\fP) stored in \fBData dir\fP can be used for ODB as well as lazylogger recovery.
.PP
.PP

.br
.PP

.br
.PP

.br
.PP
  
.SH "mchart       - assembles data for stripchart"
.PP
mchart is a periodic data retriever of a specific path in the ODB, which can be used in conjunction with a stripchart graphic program. The mchart/stripchart feature has been largely superceded by the \fBMIDAS History System\fP .
.PP
.IP "\(bu" 2
In the first of two-step procedure, a specific path in the ODB can be scanned for composing a configuration file by extracting all numerical data references \fBfile.conf\fP .
.IP "\(bu" 2
In the second step, the mchart will produce (at a fixed time interval) a refreshed data file containing the values of the numerical data specified in the configuration file. This file is then available for a stripchart program to be used for a chart-recording type of graph. Two possible stripcharts available are:
.PP
.PP
.PP
.IP "\(bu" 2
\fBgstripchart\fP The configuration file generated by mchart is compatible with the GNU stripchart which permits sophisticated data equation manipulation. On the other hand, the data display is not very fancy and provides just a basic chart recorder.
.IP "\(bu" 2
\fBstripchart - graphical stripchart data display\fP This tcl/tk application written by Gertjan Hofman provides a far better graphical chart recorder display tool, it also permits history save-set display, but the equation scheme is not implemented.
.PP
.PP
.IP "\(bu" 2
\fB Arguments \fP
.IP "  \(bu" 4
[-h ] : help
.IP "  \(bu" 4
[-h hostname ] : host name.
.IP "  \(bu" 4
[-e exptname ] : experiment name.
.IP "  \(bu" 4
[-D ] : start program as a daemon.
.IP "  \(bu" 4
[-u time] : data update periodicity (def:5s).
.IP "  \(bu" 4
[-f file] : file name (+.conf: if using existing file).
.IP "  \(bu" 4
[-q ODBpath] : ODB tree path for extraction of the variables.
.IP "  \(bu" 4
[-c ] : ONLY creates the configuration file for later use.
.IP "  \(bu" 4
[-b lower_value] : sets general lower limit for all variables.
.IP "  \(bu" 4
[-t upper_value] : sets general upper limit for all variables.
.IP "  \(bu" 4
[-g ] : spawn the graphical stripchart if available.
.IP "  \(bu" 4
[-gg ] : force the use of gstripchart for graphic.
.IP "  \(bu" 4
[-gh ] : force the use of stripchart (tcl/tk) for graphic.
.PP

.PP
.PP
.IP "\(bu" 2
\fB Usage \fP: The configuration contains one entry for each variable found under the ODBpath requested. The format is described in the gstripchart documentation.
.PP
.PP
Once the configuration file has been created, it is possible to apply any valid operation (equation) to the \fBparameters\fP of the file following the gstripchart syntax.
.PP
In the case of the use of the \fIstripchart\fP from G.Hofman, only the 'filename', 'pattern', 'maximum', 'minimum' fields are used.
.PP
When using mchart with -D Argument, it is necessary to have the \fBMCHART_DIR\fP defined in order to allow the daemon to find the location of the configuration and data files (see \fBEnvironment variables\fP).
.PP
.PP
.nf
chaos:~/chart> more trigger.conf 
#Equipment:            >/equipment/kos_trigger/statistics
menu:                   on
slider:                 on
type:                   gtk
minor_ticks:            12
major_ticks:            6
chart-interval:         1.000
chart-filter:           0.500
slider-interval:        0.200
slider-filter:          0.200
begin:        Events_sent
  filename:     /home/chaos/chart/trigger
  fields:       2
  pattern:      Events_sent
  equation:     \$2
  color:        \$blue
  maximum:      1083540.00
  minimum:      270885.00
  id_char:      1
end:            Events_sent
begin:        Events_per_sec.
  filename:     /home/chaos/chart/trigger
  fields:       2
  pattern:      Events_per_sec.
  equation:     $2
  color:        \$red
  maximum:      1305.56
  minimum:      326.39
  id_char:      1
end:            Events_per_sec.
begin:        kBytes_per_sec.
  filename:     /home/chaos/chart/trigger
  fields:       2
  pattern:      kBytes_per_sec.
  equation:     $2
  color:        \$brown

  maximum:      898.46
  minimum:      224.61
  id_char:      1
end:            kBytes_per_sec.
.fi
.PP
.PP
A second file (data file) will be updated a fixed interval by the {\fImchart}\fP utility. 
.PP
.nf
  chaos:~/chart> more trigger
    Events_sent 6.620470e+05
    Events_per_sec. 6.463608e+02
    kBytes_per_sec. 4.424778e+02

.fi
.PP
.PP
.IP "\(bu" 2
\fB Example \fP
.PP
.PP
.IP "\(bu" 2
Creation with ODBpath being one array and one element of 2 sitting under variables/: 
.PP
.nf
  chaos:~/chart> mchart -f chvv -q /equipment/chv/variables/chvv -c
  chaos:~/chart> ls -l chvv*
  -rw-r--r--   1 chaos    users         474 Apr 18 14:37 chvv
  -rw-r--r--   1 chaos    users        4656 Apr 18 14:37 chvv.conf

.fi
.PP

.IP "\(bu" 2
Creation with ODBpath of all the sub-keys sittings in variables: 
.PP
.nf
  mchart -e myexpt -h myhost -f chv -q /equipment/chv/variables -c

.fi
.PP

.IP "\(bu" 2
Creation and running in debug: 
.PP
.nf
  chaos:~/chart> mchart -f chv -q /equipment/chv/variables -d
  CHVV : size:68

  #name:17 #Values:17
  CHVI : size:68

.fi
.PP

.IP "\(bu" 2
Running a pre-existing conf file (chv.conf) debug: 
.PP
.nf
  chaos:~/chart> mchart -f chv.conf -d
  CHVV : size:68
  #name:17 #Values:17
  CHVI : size:68
  #name:17 #Values:17

.fi
.PP

.IP "\(bu" 2
Running a pre-existing configuration file and spawning \fBF_gstripchart\fP : 
.PP
.nf
  chaos:~/chart> mchart -f chv.conf -gg
  spawning graph with gstripchart -g 500x200-200-800 -f /home/chaos/chart/chv.conf ...

.fi
.PP

.PP
.PP
.IP "\(bu" 2
Running a pre-existing configuration file and spawning stripchart, this will work only if Tcl/Tk and bltwish packages are installed and the stripchart.tcl has been installed through the MIDAS Makefile. 
.PP
.nf
  chaos:~/chart> mchart -f chv.conf -gh
  spawning graph with stripchart /home/chaos/chart/chv.conf ...

.fi
.PP

.PP
.PP
 
.PP
 
.SH "mtape  - tape manipulation"
.PP
Tape manipulation utility.
.PP
.IP "\(bu" 2
\fB Arguments \fP
.IP "  \(bu" 4
[-h ] : help
.IP "  \(bu" 4
[-h hostname ] : host name
.IP "  \(bu" 4
[-e exptname ] : experiment name
.IP "  \(bu" 4
[-D ] : start program as a daemon
.PP

.PP
.PP
.IP "\(bu" 2
\fB Usage \fP
.IP "\(bu" 2
\fB Example \fP 
.PP
.nf
 >mtape

.fi
.PP

.PP
.PP
.PP
 
.SH "stripchart   - graphical stripchart data display"
.PP
This is a tcl file (stripchart.tcl) which operates on \fBmchart - assembles data for stripchart\fP data or on MIDAS history save-set files (see also \fBMIDAS History System\fP).
.PP
.IP "\(bu" 2
\fB Arguments \fP
.IP "  \(bu" 4
[-mhist ] : start stripchart for MIDAS history data.
.PP

.IP "\(bu" 2
\fB Usage \fP: stripchart <-options> <config-file> -mhist: (look at history file -default) -dmhist: debug mhist -debug: debug stripchart -config_file: see F_mchart_utility 
.PP
.nf
 > stripchart.tcl -debug

 > stripchart.tcl

.fi
.PP

.IP "\(bu" 2
\fB Example \fP 
.PP
.nf
 > stripchart.tcl -h

.fi
.PP

.PP
.PP
  gstripchart display with \fBparameters\fP and data pop-up.  
.PP
  stripchart.tcl mhist mode: main window with pull-downs.  
.PP
  stripchart.tcl Online data, running in conjunction with mchart  
.PP
.PP

.br
  
