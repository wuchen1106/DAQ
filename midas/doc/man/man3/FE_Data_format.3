.TH "FE_Data_format" 3 "31 May 2012" "Version 2.3.0-0" "Midas" \" -*- nroff -*-
.ad l
.nh
.SH NAME
FE_Data_format \- Data formats written by the frontend 

.br
.PP
.PP

.br
 
.br
  Only two formats are now now supported by the frontend, \fBMIDAS\fP and \fBFIXED\fP (support for YBOS format has been discontinued (\fBSep 2010\fP). \fBMIDAS event construction\fP has been described previously. This section gives a detailed description of the MIDAS format.
.PP
Note that a frontend cannot write data directly into ROOT format. A conversion to ROOT may be done (e.g. by the data logger) from one of the supported formats (see \fBequipment list\fP for details).
.PP
   
.PP
 
.SH "MIDAS format"
.PP
Special formats are used in MIDAS for the event header, banks and when writing to disk or tape. This section explains these formats in detail. Each event carries a 16-byte header. The header is generated by the front-end with the \fBbm_compose_event()\fP routine and is used by consumers to distinguish between different events. The header is defined in the \fBEVENT_HEADER\fP structure in \fBmidas.h\fP. It has following structure:
.PP
 Figure 1: Event and bank headers with data block.  
.PP
.IP "\(bu" 2
The \fBevent ID\fP describes the type of event. Usually 1 is used for triggered events, 2 for scaler events, 3 for HV events etc.
.IP "\(bu" 2
The \fBtrigger mask\fP can be used to describe the sub-type of an event. A trigger event can have different trigger sources like 'physics event', 'calibration event', 'clock event'. These trigger sources are usually read in by the front-end in a pattern unit. Consumers can request events with a specific triggering mask.
.IP "\(bu" 2
The \fBserial number\fP starts at 1 and is incremented by the front-end for each event.
.IP "\(bu" 2
The \fBtime stamp\fP is written by the front-end before an event is read out. It uses the time() function which returns the time in seconds since 1.1.1970 00:00:00 UTC.
.IP "\(bu" 2
The \fBdata size\fP contains the number of bytes that follows the event header.
.IP "\(bu" 2
The \fBdata area\fP of the event can contain information in any user format (integer, real etc.), although only certain formats are supported when events are copied to the ODB or written by the logger in ASCII format.
.PP
.PP
 Event headers are always kept in the \fBbyte ordering\fP of the local machine. If events are sent over the network between computers with different byte ordering, the event header is swapped automatically, but not the event contents.
.SS "Bank Format"
Events in MIDAS format contain 'MIDAS banks'. A bank is a substructure of an event and can contain only one type of data, either a single value or an array of values. Banks have a name of exactly four characters, which are treated as a \fBbank ID\fP. Banks in an event consist of a \fBglobal\fP bank header and an \fBindividual\fP bank header for each bank.
.PP
Figure 2 shows a MIDAS event containing banks coloured to match the structure in Figure 1. This has been obtained from a MIDAS data file using the \fBmdump utility\fP.
.PP

.br

.br
  Figure 2: Example of MIDAS banks dumped by mdump. 
.br
 ------------------------ Event# 2 --------------------------------
.br
 Evid:000d- Mask:0000- Serial:0- Time:0x4c7a6869- Dsize:48/0x30
.br
 #banks:1 - Bank list:-SDAS-
.br
 
.br
 Bank:SDAS Length: 32(I*1)/8(I*4)/8(Type)Type:Real*4 (FMT machine dependent)
.br
  1-> 4.000e+00 1.000e+01 1.000e+00 3.400e+00 3.400e+00 3.400e+00 3.400e+00 3.400e+00
.br
 
.br
 ------------------------ Event# 3 --------------------------------
.br
 Evid:0001- Mask:0000- Serial:0- Time:0x4c7a686b- Dsize:344/0x158
.br
 #banks:2 - Bank list:-MPETMCPP-
.br
 
.br
 Bank:MPET Length: 304(I*1)/76(I*4)/76(Type) Type:Unsigned Integer*4
.br
  1-> 0x80010000 0x00000002 0x10010000 0x00004e21 0x80020000 0x00000002 0x20020000 0x000015f4
.br
 9-> 0x20020000 0x00001660 0x20020000 0x0000185f 0x20020000 0x0000191e 0x20020000 0x000019d6
.br
 17-> 0x40020000 0x00001a37 0x20020000 0x00001a77 0x20020000 0x00001ba2 0x10020000 0x00004e22
.br
 25-> 0x80030000 0x00000002 0x20030000 0x00001637 0x20030000 0x000018d1 0x20030000 0x000019bc
.br
 33-> 0x20030000 0x00001b35 0x20030000 0x00001bb2 0x10030000 0x00004e21 0x80040000 0x00000002
.br
 41-> 0x10040000 0x00004e22 0x80050000 0x00000002 0x20050000 0x000013c5 0x20050000 0x000017f2
.br
 49-> 0x20050000 0x0000185f 0x20050000 0x00001976 0x20050000 0x00001aa8 0x10050000 0x00004e21
.br
 57-> 0x80060000 0x00000002 0x20060000 0x000015c3 0x20060000 0x000018d8 0x20060000 0x0000198d
.br
 65-> 0x20060000 0x00001ac4 0x10060000 0x00004e22 0x80070000 0x00000002 0x20070000 0x00001747
.br
 73-> 0x20070000 0x000019ae 0x10070000 0x00004e21
.br
 
.br
 Bank:MCPP Length: 16(I*1)/4(I*4)/4(Type) Type:Unsigned Integer*4
.br
  1-> 0x00005e4c 0x0000352d 0x00006453 0x00006d5b
.br
 
.br
.PP
The 'data size total' is the size in bytes of all bank headers and bank data. Flags are currently not used. The bank header contains four characters as identification, a bank type that is one of the TID_xxx values defined in \fBmidas.h\fP, and the data size in bytes. If the byte ordering of the contents of a complete event has to be swapped, the routine \fBbk_swap()\fP can be used.
.PP

.br
.PP

.br
  
.SS "Format"
Events are written to disk files without any reformatting. For tapes, however, a fixed block size is used. The block size TAPE_BUFFER_SIZE is defined in \fBmidas.h\fP and usually 32kB. Three special events are produced by the system. A begin-of-run (BOR) and end-of-run (EOR) event is produced which contains an ASCII dump of the ODB in its data area. Their IDs is 0x8000 (BOR) and 0x8001 (EOR). A message event (ID 0x8002) is created if Log messages is enabled in the logger channel setting. The message is contained in the data area as an ASCII string. The BOR event has the number MIDAS_MAGIC (0x494d or 'MI') as the trigger mask and the current run number as the serial number. A tape can therefore be identified as a MIDAS formatted tape. The routine tape_copy() in the utility mtape.c is an example of how to read a tape in MIDAS format.
.PP
.PP

.br
.PP
.PP

.br
 
