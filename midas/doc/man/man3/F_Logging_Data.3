.TH "F_Logging_Data" 3 "31 May 2012" "Version 2.3.0-0" "Midas" \" -*- nroff -*-
.ad l
.nh
.SH NAME
F_Logging_Data \- Customizing the MIDAS data logging 
 
.PP

.br
.PP
When mlogger is started for the first time, it will create default /Logger and /History trees. The following information will be displayed (providing mlogger has NOT been started as a daemon) : 
.PP
.nf
$ mlogger
Log     directory is /home/midas/online/
Data    directory is same as Log unless specified in channels/
History directory is same as Log
ELog    directory is same as Log

MIDAS logger started. Stop with '!'

.fi
.PP
.PP
Most of the keys in the /Logger ODB tree are used to customize logging of the data. There are also keys to customize the Messaging system. The /Logger tree also may contain optional keys relevent to storing the History and Elog files (i.e. the \fBHistory\fP and \fBElog\fP Keys). The optional subtree /Logger/SQL is described in the section \fBmySQL database\fP. The \fBODB /History tree\fP is described in the section \fBHistory Logging\fP . and the \fBThe ODB /Elog Tree\fP in the \fBElog\fP section.
.PP
 
.SH "/Logger ODB tree"
.PP
The following example shows a /logger tree as created by \fBmlogger\fP. See also \fBExplanation of the keys in the ODB /Logger tree\fP .
.PP
.PP
.nf
Key name                        Type    #Val  Size  Last Opn Mode Value
---------------------------------------------------------------------------
Logger                          DIR
    Data dir                    STRING  1     256   4h   0   RWD  /home/midas/online
    Message file                STRING  1     256   22h  0   RWD  midas.log
    Write data                  BOOL    1     4     2h   0   RWD  y
    ODB Dump                    BOOL    1     4     22h  0   RWD  n
    ODB Dump File               STRING  1     256   22h  0   RWD  run%05d.odb
    Auto restart                BOOL    1     4     22h  0   RWD  n
    Auto restart delay          INT     1     4     94h  0   RWD  0
    Tape message                BOOL    1     4     15h  0   RWD  y
    ODBC_Debug                  INT     1     4     >99d 0   RWD  0
    ODBC_DSN                    STRING  1     256   >99d 0   RWD
    Channels                    DIR
        0 
            Settings            DIR
                Active          BOOL    1     4     1h   0   RWD  y
                Type            STRING  1     8     1h   0   RWD  Disk
                Filename        STRING  1     256   1h   0   RWD  run%05d.mid
                Format          STRING  1     8     1h   0   RWD  MIDAS
                Compression     INT     1     4     94h  0   RWD  0
                ODB Dump        BOOL    1     4     1h   0   RWD  y
                Log messages    DWORD   1     4     1h   0   RWD  0
                Buffer          STRING  1     32    1h   0   RWD  SYSTEM
                Event ID        INT     1     4     1h   0   RWD  -1
                Trigger Mask    INT     1     4     1h   0   RWD  -1
                Event limit     DWORD   1     4     1h   0   RWD  0
                Byte limit      DOUBLE  1     8     1h   0   RWD  0
                Subrun Byte limiDOUBLE  1     8     >99d 0   RWD  0
                Tape capacity   DOUBLE  1     8     1h   0   RWD  0
                Subdir format   STRING  1     32    7h   0   RWD
                Current filenameSTRING  1     256   7h   0   RWD
                  
            Statistics          DIR
                Events written  DOUBLE  1     8     1h   0   RWD  0
                Bytes written   DOUBLE  1     8     1h   0   RWD  0
                Bytes written toDOUBLE  1     8     1h   0   RWD  0
                Files written   INT     1     4     1h   0   RWD  0
.fi
.PP
 
.br
 
.PP
 
.br
 
.SH "Explanation of the keys in the ODB /Logger tree"
.PP
An example of a default /Logger tree is shown \fBabove\fP. This table also includes the optional keys that the user may create. The following table is an index to the explanation of each key in the /Logger tree. 
.br
 \fB/Logger\fP  
.br
  
.br
  
.br
  
.br
   
.br
  \fBData dir\fP  
.br
  
.br
  
.br
   
.br
  \fBMessage file\fP  
.br
  
.br
  
.br
   
.br
  \fBAuto restart\fP  
.br
  
.br
  
.br
   
.br
  \fBAuto restart delay\fP  
.br
  
.br
  
.br
   
.br
  \fBRun Duration\fP (optional)  
.br
  
.br
  
.br
   
.br
  \fBWrite data\fP  
.br
  
.br
  
.br
   
.br
  \fBODB Dump\fP  
.br
  
.br
  
.br
   
.br
  \fBOBD Dump File\fP  
.br
  
.br
  
.br
   
.br
  \fBTape Message\fP  
.br
  
.br
  
.br
   
.br
  \fBChannels\fP  
.br
  
.br
  
.br
   
.br
  \fBHistory Dir\fP \fB(Optional)\fP  
.br
  
.br
  
.br
   
.br
  \fBElog Dir\fP \fB(Optional)\fP  
.br
  
.br
  
.br
   
.br
  \fBSQL\fP \fB(Optional)\fP  
.br
  
.br
  
.br
  
.PP
Above: The ODB /Logger tree. Click on a key for details. 
.PP

.br
 
.PP
 
.br
.PP
Keys in the ODB tree /Logger   ODB Key  Type  Explanation  
.PP
  Data dir  STRING  Specifies in which directory files produced by \fBmlogger\fP should be written. Once the Logger is running, \fB'Data Dir'\fP will be pointing to the location of
.IP "\(bu" 2
the data file(s) (unless overruled by \fBFilename\fP).
.IP "\(bu" 2
the message log file (unless overruled by \fBMessage file\fP) ,
.IP "\(bu" 2
the ODB dump files (unless overruled by \fBODB Dump file\fP ),
.PP
.PP
and the optional
.IP "\(bu" 2
elog files (unless overruled by \fBElog Dir\fP)
.IP "\(bu" 2
history files (unless overruled by \fBHistory Dir\fP).   When \fBMultiple Logging Channels\fP are enabled,
.IP "  \(bu" 4
by default the data path for \fBall\fP the channels is set to the same location, given by \fBData Dir\fP.
.IP "  \(bu" 4
If different directories have to be assigned to individual logging channels, the ODB key \fB/Logger/channels/<channel-number>/Settings/Filename\fP can contain the full path of the location of the \fB\fP.mid, .ybs, .asc file.
.IP "  \(bu" 4
If this key contains the full directory path (i.e. contains the OS specific \fBDIR_SEPARATOR\fP (e.g. '/' for Linux or '\\' for Windows), then the \fBglobal\fP \fBData Dir\fP will be \fBoverwritten with the setting for that particular channel\fP. For example, if
.IP "    \(bu" 6
Key \fBFilename\fP contains \fI'run%05.mid'\fP. \fBData Dir\fP will \fBnot\fP be overwritten
.IP "    \(bu" 6
Key \fBFilename\fP contains \fI'/data1/ch1log/run%05.mid'\fP. \fBData Dir\fP \fBwill\fP be overwritten   
.PP

.PP

.PP
  Message file  STRING  Specifies the \fBfilename\fP of the \fBmessage log\fP, which is a simple ASCII file containing all the messages from the MIDAS message system. The default filename is \fB 'midas.log' \fP. This file can can be viewed at any time to see a record of what happened in an experiment, since each entry is time-stamped (see \fBexample\fP).  
.PP
 Auto restart  BOOL  When this flag is set to 'y' (i.e. TRUE), a new run is automatically restarted when the previous run has been stopped by the logger due to an event or byte limit. Default value is 'n'. The run start can be prevented by the user manually e.g. from \fBodbedit\fP.  this key may be accessed from the mhttpd main status page \fBRun status information\fP as \fB'restart'\fP.  
.PP
 Auto restart delay  INT  Providing \fBAuto restart\fP is set TRUE, the automatic start of the next run will be delayed by this number of milliseconds.  
.PP
 Run duration  INT  Optional value new since \fBSep 2009\fP This key allows for runs with a certain duration. To use this option, the user creates and sets this variable to a non-zero \fBinteger\fP value (in seconds). After a run has lasted for this duration, it will be stopped automatically by the logger. To automatically produce \fBsequences of runs all with the same duration\fP, also set the \fBAuto restart\fP flag to 'y' .  
.PP
 Write data  BOOL  Global flag which enables or disables data logging for all channels. Default value is 'y' (data logging enabled). It can be set to 'n' (FALSE) temporarily to make a short test run without data logging. The key Write data is a predefined logger key for enabling data logging.  The \fBActive\fP key (in the \fB/Logger/Channels/<channel-number>\fP tree) must \fBalso\fP be set to 'y' for the data from that channel to be logged.
.PP
.PP
 ODB Dump    BOOL  If this flag is set to 'y', a dump of the complete ODB will be written to the file specified by \fBODB Dump file\fP at the end of each run. Default value is 'n'. 
.IP "\(bu" 2
The ODB contents is \fBalways\fP saved into a file 'last.xml' at the beginning of each run regardless of the setting of this key.
.IP "\(bu" 2
The ODB contents can also be saved into the data stream as an event (see \fBODB Dump per logging channel\fP).  
.PP
.PP
 ODB Dump File  STRING  Specifies the filename in which the dump of the complete ODB will be written at the end of each run if the \fBODB Dump\fP flag is set to 'y'. The default value is \fI'run%05d.odb'\fP. If this filename has the extension '.xml' or '.XML' the file will be written in XML format, otherwise in ASCII format. For a description of the format see \fBdb_copy_xml()\fP or \fBdb_copy()\fP respectively. 
.br
 If this filename contains a '%', the '%' will be replaced by the current run number (cf. format string of printf() C function). The format specifier '%05d' from the example would be evaluated to a five digit run number with leading zeros e.g. run00002.odb. The ODB dump file can be used for off-line analysis to check run \fBparameters\fP etc. (see also \fBODB Dump per logging channel\fP).
.PP
.IP "\(bu" 2
\fBNote:\fP The location of the ODB dump files can also be specified in this field. If the \fBODB Dump File\fP string contains a \fBDIR_SEPARATOR\fP as in the following example, it is considered as an absolute path. If no \fBDIR_SEPARATOR\fP is present, the dump file will be written to the location given by \fBData dir\fP.
.PP
.PP
.PP
.nf
  [local:Default:S]/Logger>ls
  Data dir                        /scr0/spring2009
  Message file                    midas.log 
  Auto restart                     n
  Write data                      y
  ODB Dump                        n
  ODB Dump File                   run%05d.odb
  Tape message                    y 
 Channels
  [local:Default:S]/Logger>set OD
  [local:Default:S]/Logger>set OD
  ODB Dump
  ODB Dump File
  [local:Default:S]/Logger>set 'ODB Dump File' '/mypath/run%06d.odb'
  [local:Default:S]/Logger>ls
  Data dir                        /scr0/spring2009
  Message file                    midas.log
  Auto restart                    n
  Write data                      y
  ODB Dump                        n
  ODB Dump File                   /scr0/dump/run%06d.odb
  Tape message                    y
 Channels
.fi
.PP
  
.PP
 Tape message  BOOL  If set to 'y', MIDAS messages during mounting tapes and writing of EOF marks are generated. This can be useful for slow tapes to inform all users in a counting house about the tape status. Default value is 'y'.    ODBC_Debug  INT  Optional key created if ODBC is installed (see \fBBuilding Options\fP). Used by the \fBMIDAS SQL History system\fP . Set to 1 to see all SQL commands. Default value is 0.  
.PP
 ODBC_DSN  STRING  Optional key created if ODBC is installed (see \fBBuilding Options\fP). Default value is blank. See \fBMIDAS SQL History system\fP for details.  
.PP
 Channels   DIR  This is a subdirectory under the \fB/Logger ODB tree\fP which contains settings for individual channels. By default, only channel '0' is created. See \fBMultiple Logging Channels\fP .  
.PP
History dir  STRING  This optional key is used to reassign the location of history files. See \fBLocation of History Files\fP .  
.PP
Elog dir  STRING  This optional key is used to reassign the location of elog files. See \fBLocation of Elog Files\fP .  
.PP
\fBSQL\fP  DIR  Optional directory for SQL. See \fBmySQL\fP .   Above: meaning of keys in the /Logger ODB tree 
.SH "Multiple Logging Channels"
.PP
By default, only \fBone\fP logging channel is created (Logging Channel 0). To create \fBmultiple\fP logging channels, an existing Channel subtree can be copied, e.g. to create a second logging channel (Channel 1) using \fBodbedit\fP :
.PP
.PP
.nf
  [local]cd /Logger
  [loca]]Logger>cd channels
  [local]Channels>ls 
  0
  [local]Channels>copy 0 1
  [local]Channels>ls 
  0
  1
.fi
.PP
.PP
.IP "\(bu" 2
If more than one logging channel is defined, there will be a \fBSettings tree for each channel\fP (0,1...). Thus the \fBparameters\fP for \fBeach\fP logging channel can be set \fBindividually\fP.
.IP "\(bu" 2
To send different events to different logging channels, they may be selected by \fBEvent ID\fP or \fBTrigger Mask\fP. See also \fBEvent Filtering\fP .
.PP
.SH "Explanation of keys in the ODB /Logger/Channels tree"
.PP
The keys in the ODB /Logger/Channels/<channel-number>/Settings  tree are shown below. By default, \fI <channel-number> \fP has the value 0 (for Logging Channel 0). 
.br
 If \fBMultiple Logging Channels\fP are defined, there will be a Settings tree for each defined Logging Channel. The tree /Logger/Channels/0/Settings is shown below.
.PP

.br
.PP

.br
  \fBChannels\fP  
.br
  
.br
  
.br
   
.br
  
.br
  \fB0\fP  
.br
  
.br
   
.br
  
.br
  
.br
  \fBSettings\fP 
.br
   
.br
  
.br
  
.br
  
.br
  \fBActive\fP   
.br
  
.br
  
.br
  
.br
  \fBType\fP   
.br
  
.br
  
.br
  
.br
  \fBFilename\fP   
.br
  
.br
  
.br
  
.br
  \fBFormat\fP   
.br
  
.br
  
.br
  
.br
  \fBCompression\fP   
.br
  
.br
  
.br
  
.br
  \fBODB Dump\fP   
.br
  
.br
  
.br
  
.br
  \fBLog messages\fP   
.br
  
.br
  
.br
  
.br
  \fBBuffer\fP   
.br
  
.br
  
.br
  
.br
  \fBEvent Filtering\fP   
.br
  
.br
  
.br
  
.br
  \fBEvent ID\fP   
.br
  
.br
  
.br
  
.br
  \fBTrigger mask\fP   
.br
  
.br
  
.br
  
.br
  \fBEvent limit\fP   
.br
  
.br
  
.br
  
.br
  \fBByte limit\fP   
.br
  
.br
  
.br
  
.br
  \fBSubrun Byte limit\fP   
.br
  
.br
  
.br
  
.br
  \fBTape capacity\fP   
.br
  
.br
  
.br
  
.br
  \fBSubdir format\fP   
.br
  
.br
  
.br
  
.br
  \fBCurrent Filename\fP   
.br
  
.br
  
.br
  \fBStatistics\fP 
.br
   
.br
  
.br
  
.br
  
.br
  \fBEvents written\fP   
.br
  
.br
  
.br
  
.br
  \fBBytes written\fP   
.br
  
.br
  
.br
  
.br
  \fBBytes written uncompressed\fP   
.br
  
.br
  
.br
  
.br
  \fBBytes written total\fP   
.br
  
.br
  
.br
  
.br
  \fBFiles written\fP   Above: The ODB /Logger/Channels/0/Settings tree. Click on a key for details. 
.PP

.br
 
.PP
 
.br
   Keys in the ODB tree /Logger/Channels/0/Settings   ODB Key  Type  Explanation 
.PP
 Active  BOOL  If set to 'y' logging channel is \fBactive\fP. Data is only logged for channels that are active. See also \fBWrite Data\fP key. Set to 'n' to disable data logging from this channel. Default value is 'y'.  
.PP
 Type  STRING  Specify the type of media on which the logging should take place. It can be \fB'Disk'\fP, \fB'Tape'\fP or \fB'FTP'\fP (see \fBFilename\fP). Default value is 'Disk'.  
.PP
 Filename   STRING  
.IP "\(bu" 2
for \fB disk logging \fP, specifies the name of a file to contain the data. Default value is \fI'run%05d.mid'\fP where \fI'%05d'\fP is replaced by the current run number in the same way as described for the \fBODB Dump file\fP key. This key may contain a directory string in addition to a filename, so that different logging channels may have their data logged into specific directories. If the key does NOT also contain a directory string, the directory given in the key \fBData dir\fP will be used. The filename must match the \fBFormat\fP Key specified below.
.PP
.PP
.IP "\(bu" 2
for \fB tape logging \fP, the filename specifies a tape device i.e.
.IP "  \(bu" 4
/dev/nrmt0 or /dev/nst0 under UNIX or
.IP "  \(bu" 4
\\\\.\\tape0 under Windows NT.
.PP

.IP "\(bu" 2
In \fB FTP mode \fP, the data is written directly to a remote computer via FTP. \fB'Filename'\fP specifies the access information for the FTP server. It has the following format:
.PP
.PP
.PP
.nf
  <host name>, <port number>, <user name>, <password>, <directory>, <file name>
.fi
.PP
 for example 
.PP
.nf
  myhost.my.domain,21,john,password,/usr/users/data,run%05d.mid

.fi
.PP
 The normal FTP port number is 21, or 1021 for a Unitree Archive like the one used at the Paul Scherrer Institute. By using the FTP mode, a back-end computer can write directly to the archive.
.PP
.PP
  Format  STRING  Specifies the format to be used for writing the data to the logging channel. It can take one of four values: \fBMIDAS, ROOT, ASCII and DUMP\fP. 
.br
.PP
For \fBdisk\fP \fBlogging\fP, the extension for the \fBFilename\fP Key above must match one of the following:
.IP "\(bu" 2
\fB .mid \fP for \fBMIDAS\fP (or \fB.mid.gz\fP - see \fBCompression\fP)
.IP "\(bu" 2
\fB .root \fP for \fBROOT\fP 
.IP "\(bu" 2
\fB .asc \fP for \fBASCII\fP 
.IP "\(bu" 2
\fB .txt \fP for \fBDUMP\fP 
.PP
.PP
For \fBROOT\fP \fBformat\fP the data logger will automatically convert the format specified in the frontend \fBequipment list\fP to ROOT format (see \fBformat\fP for details). The \fB ASCII format \fP converts events into readable text format which can be easily analyzed by programs that have problems reading binary data. While the ASCII format tries to minimize the file size by printing one event per line, the \fBDUMP\fP \fBformat\fP gives a very detailed ASCII representation of the event including bank information, serial numbers etc., so it should be used mainly for diagnostics. 
.PP
.PP
 Compression   INT  If the Compression Level is set to 0, compression is turned off. If set > 0, the data files are compressed before being written. In this case,
.IP "\(bu" 2
the file extension '.gz' must be appended to the \fBFilename\fP Key (see also \fBFormat\fP Key)
.IP "\(bu" 2
and ZLIB support must be compiled into the MIDAS package (see \fBNEED_ZLIB\fP ).
.PP
.PP
This feature applies only to files saved onto \fBdisk\fP in MIDAS format. ROOT format is already compressed.  
.PP
 ODB Dump   BOOL  If this flag is set, a complete dump of the ODB is performed \fBto this logging channel\fP before and after every run. The ODB content is dumped in one long ASCII string reflecting the status at begin-of-run event and at end-of-run event. These special events have an ID of EVENTID_BOR and EVENTID_EOR and a serial number equal to the current run number, and are not visible using the \fBmdump\fP utility. An analyzer in the off-line analysis stage can use these special events to restore the ODB to its online state.  The dump of the ODB into the event stream for this logger channel is independent of the \fB/Logger/ODB Dump\fP parameter, which is used to dump the ODB to an ASCII or XML file on disk.  
.PP
 Log messages  DWORD  This is a bit-field for logging system messages as message events along with the event data from the experiment. 
.br
 If a bit in this field is set, the respective system message is written to the logging channel as a message event with an ID of EVENTID_MESSAGE (0x8002). The bits are 1 for error, 2 for info, 4 for debug, 8 for user, 16 for log, 32 for talk, 64 for call messages and 255 to log all messages. For an explanation of these messages refer to \fBBuffer Manager\fP , \fBEvent ID\fP and the \fBTrigger Mask\fP.  
.PP
 Buffer  STRING  This specifies the buffer where the logger will find the event. It is usually set to 'SYSTEM' and is specified in the \fBequipment list\fP for this event.  
.PP
 Event Filtering   STRING  By specifying a buffer other than the 'SYSTEM' buffer, \fBevent filters\fP can be implemented. For example, an analyzer can request all events from the 'SYSTEM' buffer, but only write acceptable events to a new buffer called 'FILTERED'. When the logger is set to now request only events from the new buffer instead of the 'SYSTEM' buffer, only filtered events are logged. 
.br
 Event selection for logging channels can also be done by specifying the \fBEvent ID\fP and/or the \fBTrigger mask\fP.  
.PP
 Event ID   INT  This is the ID of the event(s) to be logged. It is specified in the \fBequipment list\fP for this event. To log events with \fBany\fP ID, the Event ID is set to -1 (EVENTID_ALL). The Event ID parameter and/or the \fBTrigger Mask\fP may be used to select events to be sent to different logging channels, or as an \fBEvent Filtering\fP system.  
.PP
 Trigger Mask  INT  Specifies which events to log. See \fBExplanation of Equipment list parameters\fP to see how events may be selected by their \fBtrigger mask\fP. 
.br
 For a logging channel to receive all events, -1 is used for both the \fBEvent ID\fP and the Trigger Mask. 
.br
 This parameter and/or the \fBEvent ID\fP may be used to select events to be sent to particular logging channels, or for \fBEvent Filtering\fP.  
.PP
 Event Limit   DWORD  This field can be used to stop a run when set to a non-zero value. The statistics value \fBEvents Written\fP is checked against th limit \fBEvent limit\fP . When this condition is reached, the run is stopped automatically by the logger. The next run can then be started automatically if desired (see \fBAuto restart\fP ).  
.PP
 Byte limit   DOUBLE  This field can be used to stop a run when set to a non-zero value. The statistics value \fBBytes written\fP is checked against the limit \fBByte limit\fP . When this conditions is reached, the run is stopped automatically by the logger. The next run can then be started automatically if desired (see \fBAuto restart\fP ).  
.PP
 Subrun Byte limit   DOUBLE  
.PP
\fBTodo\fP
.RS 4
More information needed about defining subruns
.RE
.PP
This field can be used to stop a subrun when set to a non-zero value. When this conditions is reached, the run is stopped automatically by the logger. The next run can then be started automatically if desired (see \fBAuto restart\fP ).  
.PP
 Tape capacity  DOUBLE  This field can be used to stop a run when set to a non-zero value. The statistics value \fBBytes written total\fP in the is checked against the limit \fBTape capacity\fP. When this conditions is reached, the run is stopped automatically by the logger.  
.PP
 Subdir format  STRING  This field optionally specifies a subdirectory, which is appended to the directory string in the key \fBFilename\fP.
.PP
It is used to place the data log file into a date-stamped subdirectory. This is useful where a large numbers of datafiles are produced, or experiments are active for a long time period, and it is desirable to store the data in sub-directories according to their date. This can be done automatically using the \fBSubdir format\fP field.
.PP
If the \fBSubdir format\fP field is not empty, the data log file will be placed in a subdirectory. The name of this subdirectory is composed by the given \fBSubdir format\fP string. Its format follows the definition of the system call strftime() . (See man strftime). Ordinary characters placed in the format string are copied to the output character array 's' without conversion. Conversion specifiers are introduced by a '%' character, and are replaced in 's' as follows for the most common ones:
.IP "\(bu" 2
%Y : Year (ex: 2002)
.IP "\(bu" 2
%y : Year (range:00..99)
.IP "\(bu" 2
%m : Month (range: 01..12)
.IP "\(bu" 2
%d : Day (range: 00..31)
.PP
.PP
The other characters are: %a, %A, %b, %B, %c, %C, %d, %D, %e, %E, %G, %g, %h, %H, %I, %j, %k, %l, %m, %M, %n, %O, %p, %P, %r, %R, %s, %S, %t, %T, %u, %U, %V, %w, %W, %x, %X, %y, %Y, %z, %Z, %+. (See man strftime for explanation).  
.PP
 Current filename  STRING  will reflect the full path of the current saved data file.     Above: meaning of keys in the /Logger/Channels/\fI<channel-number>\fP/Settings ODB tree 
.SH "/Logger/Channels/0/Statistics tree"
.PP
The keys in the /Logger/Channels/0/Statistics  tree are shown below. If more than one logging channel is defined, there will be a \fB Statistics tree for each defined channel\fP (see \fBmultiple channels\fP).
.PP
Periodic updates of the statistics branch is performed automatically.
.PP
Keys in the ODB tree /Logger/Channels/0/Statistics   ODB Key  Type  Explanation 
.PP
 events written  DOUBLE  Number of events written. Cleared at begin of run. \fBEvents written\fP statistics are used to determine when to stop a run automatically by checking against \fBEvent Limit\fP.
.PP
.PP
 Bytes written  DOUBLE  Number of bytes written. Cleared at begin of run. \fBBytes written\fP statistics are used to determine when to stop a run automatically by checking against \fBByte Limit\fP.  
.PP
 Bytes written uncompressed  DOUBLE  If \fBCompression level\fP is 0 (i.e. not compressed), the values of \fBBytes written uncompressed\fP and \fBBytes written\fP will be identical.  
.PP
 Bytes written total  DOUBLE  Total number of bytes written. Cleared only when a tape is rewound with the \fBODBEdit\fP command \fBrewind\fP. The \fBBytes written total\fP entry can therefore be used as an indicator of when a tape is full by checking against the limit \fBTape capacity\fP.
.PP
.PP
 files written  INT  Number of files written. Cleared only when a tape is rewound with the \fBODBEdit\fP command \fBrewind\fP. \fBFiles written\fP value can be used off-line to determine how many files on a tape have to be skipped in order to reach a specific run.   Above: meaning of keys in the /Logger/Channels/0/Statistics ODB tree 
.PP

.br
 
.PP
 
.br
.SH "Optional SQL subtree in the ODB /Logger tree"
.PP
The 'SQL' optional subdirectory may be created in the \fB/Logger ODB tree\fP . See \fBLogging information to a mySQL database\fP for details.
.PP
.PP
 
